@using Microsoft.AspNetCore.Identity
@using React_Bootstrap.Models.Authorization;
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    string returnUrl = null;
    var query = ViewContext.HttpContext.Request.Query;
    if (query.ContainsKey("returnUrl"))
    {
        returnUrl = query["returnUrl"];
    }
}

@if (SignInManager.IsSignedIn(User))
{//Authorized View for the User's NavBar.
    <Button.Group>
        <Button variant="outline-success btn-sm" href="/Account/Manage/Index"
                asp-area="Identity" asp-page="/Account/Manage/Index" asp-route-returnUrl="/Account/Manage/Index">
            @User.Identity.Name's Settings
        </Button>
        <Button variant="outline-success btn-sm" href="/LogOut"
                asp-area="Identity" asp-page="Identity/Account/Logout" asp-route-returnUrl="/LogOut">
            Logout
        </Button>
    </Button.Group>
}
    else
{//UnAuthenticated/Authorized View
    <Button.Group>
        <Button href="Identity/Account/Register"
                asp-area="Identity" asp-page="Identity/Account/Register" asp-route-returnUrl="@returnUrl">
            Register
        </Button>
        <Button href="Identity/Account/Login"
                asp-area="Identity" asp-page="Identity/Account/Login" asp-route-returnUrl="Identity/Account/Manage/Index">
            Login
        </Button>
    </Button.Group>
}
